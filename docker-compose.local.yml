version: '3.8'

services:
  db:
    build:
      context: ./
      dockerfile: infra/dockerfiles/local/db.Dockerfile
    platform: linux/amd64
    ports:
      - 3306:3306
    volumes:
      - mysql-db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: mysql_study 
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql_password
      MYSQL_HOST: db
      MYSQL__PORT: 3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./back:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=mysql
      - DB_PASSWORD=mysql_password
      - DB_NAME=mysql_study

  backend:
    tty: true
    depends_on:
      - db
    build:
      context: ./ 
      dockerfile: infra/dockerfiles/local/backend.Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./backend:/app
    command: bash -c "rm -f tmp/pids/server.pid && rails server -b 0.0.0.0"
    networks:
      - app-network

  frontend:
    build:
      context: ./
      dockerfile: infra/dockerfiles/local/frontend.Dockerfile
    volumes:
      - ./frontend/app:/app
    networks:
      - app-network
    ports:
      - '4000:4000'

  # nginx:
  #   build:
  #     context: ./
  #     dockerfile: infra/dockerfiles/local/nginx.Dockerfile
  #   ports:
  #     - '80:80'
  #   networks:
  #     - app-network
  #   restart: always
  #   depends_on:
  #     - frontend

volumes:
  mysql-db:
    driver: local

networks:
  app-network:
    driver: bridge